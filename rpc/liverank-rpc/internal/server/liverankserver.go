// Code generated by goctl. DO NOT EDIT!
// Source: liverank.proto

package server

import (
	"context"

	"github.com/leaper-one/bubblebox/rpc/liverank-rpc/internal/logic"
	"github.com/leaper-one/bubblebox/rpc/liverank-rpc/internal/svc"
	"github.com/leaper-one/bubblebox/rpc/liverank-rpc/types/liverank"
)

type LiverankServer struct {
	svcCtx *svc.ServiceContext
	liverank.UnimplementedLiverankServer
}

func NewLiverankServer(svcCtx *svc.ServiceContext) *LiverankServer {
	return &LiverankServer{
		svcCtx: svcCtx,
	}
}

//  客户端提交排名
func (s *LiverankServer) SubmitRank(ctx context.Context, in *liverank.SubmitRankRequest) (*liverank.SubmitRankResponse, error) {
	l := logic.NewSubmitRankLogic(ctx, s.svcCtx)
	return l.SubmitRank(in)
}

//  客户端获取排名
func (s *LiverankServer) GetRank(ctx context.Context, in *liverank.GetRankRequest) (*liverank.GetRankResponse, error) {
	l := logic.NewGetRankLogic(ctx, s.svcCtx)
	return l.GetRank(in)
}

//  关注某个直播间的某个已有投稿的用户
func (s *LiverankServer) MarkConcern(ctx context.Context, in *liverank.MarkConcernRequest) (*liverank.MarkConcernResponse, error) {
	l := logic.NewMarkConcernLogic(ctx, s.svcCtx)
	return l.MarkConcern(in)
}
